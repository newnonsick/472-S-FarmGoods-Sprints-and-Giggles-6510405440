name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop

jobs:
  test-and-build-develop:
    if: github.ref == 'refs/heads/develop' || github.event.pull_request.base.ref == 'develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          if [ -f "jest.config.js" ]; then
            npm test
          else
            echo "No tests found, skipping..."
          fi

      - name: Build Docker image
        run: docker build -t farmgoods:develop .

  build-and-release-main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from package.json
        id: get_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t farmgoods:${{ env.VERSION }} -t farmgoods:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker tag farmgoods:${{ env.VERSION }} ${{ secrets.DOCKER_USERNAME }}/farmgoods:${{ env.VERSION }}
          docker tag farmgoods:latest ${{ secrets.DOCKER_USERNAME }}/farmgoods:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/farmgoods:${{ env.VERSION }}
          docker push ${{ secrets.DOCKER_USERNAME }}/farmgoods:latest

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: |
            Auto-generated release for version ${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
